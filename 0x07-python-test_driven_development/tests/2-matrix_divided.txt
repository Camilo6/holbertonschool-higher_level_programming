2. divide a matrix
======================
Function
========
Function that divides all elements of a matrix.

Import module:
	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Uses:

Import matrix
	>>> matrix = [[1, 2, 3],[4, 5, 6]]

Input of standard matrix and div = integer
	>>> print(matrix_divided(matrix, 3))
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Input of standard matrix and div = float
	>>> print(matrix_divided(matrix, 1.5))
	[[0.67, 1.33, 2.0], [2.67, 3.33, 4.0]]

Print matrix
	>>> print(matrix)
	[[1, 2, 3], [4, 5, 6]]

Input of div = 'string'
	>>> print(matrix_divided(matrix,"Hi"))
	Traceback (most recent call last):
	....
	TypeError: div must be a number

Input of div = 0
	>>> print(matrix_divided(matrix, 0))
	Traceback (most recent call last):
	...
	ZeroDivisionError: division by zero

Change matrix to not be symmetrical
	>>> matrix = [[1, 2, 3],[4, 6]]

Set matrix as None
	>>> print(matrix_divided(None, 2))
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

No arguments passed
	>>> print(matrix_divided())
	Traceback (most recent call last):
	...
	TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
